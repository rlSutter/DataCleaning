<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <appSettings>
    <add key="basepath" value="C:\Inetpub\wwwroot\"/>
    <add key="dbuser" value="YOUR_DB_USER"/>
    <add key="dbpass" value="YOUR_DB_PASSWORD"/>
    <!--<add key="dataflux" value="your-dataflux-server.local"/>-->
    <add key="bing_key" value="YOUR_BING_MAPS_API_KEY"/>
    <add key="geocodio_key" value="YOUR_GEOCODIO_API_KEY"/>
    <add key="CleanOrganization_debug" value="Y"/>
    <add key="CleanContact_debug" value="Y"/>
    <add key="CleanAddress_debug" value="Y"/>
    <add key="CleanAddress_detailed_debug" value="N"/>
    <add key="StandardizeOrganization_debug" value="Y"/>
    <add key="StandardizeContact_debug" value="Y"/>
    <add key="StandardizeAddress_debug" value="Y"/>
    <add key="StandardizeContact_debug" value="Y"/>
    <!--<add key="MD_Key" value="YOUR_MELISSADATA_LICENSE_KEY"/>-->
    <add key="MD_Key" value="YOUR_MELISSADATA_LICENSE_KEY"/>
    <!--<add key="MD_MU_Key" value="YOUR_MELISSADATA_MATCHUP_KEY"/>-->
    <add key="MD_MU_Key" value="YOUR_MELISSADATA_MATCHUP_KEY"/>
    <!--<add key="MD_DataPath" value="\\your-server\c$\Program Files\Melissa DATA\DQT\Data"/>-->
	<add key="MD_DataPath" value="C:\Program Files\Melissa DATA\DQT\Data"/>
    <add key="MD_MU_DataPath" value="C:\ProgramData\Melissa DATA\MatchUP"/>
    <!--</add>"C:\Program Files\Melissa DATA\DQT\Data"/> -->
    <!--<add key="MD_DataPath" value="\\your-sql-server\Data"/> -->
    <add key="MDVerifiedDaysAgo" value="1"/>
    <add key="GeocodeUrl" value="https://api.geocod.io/v1/geocode?"/>
    <add key="Geocode_proxyIP" value="YOUR_PROXY_IP"/>
   
  </appSettings>
  <connectionStrings>
    <!-- Production -->
    <add name="reports" connectionString="server=YOUR_SQL_SERVER;uid=YOUR_DB_USER;pwd=YOUR_DB_PASSWORD;database=reports;Min Pool Size=3;Max Pool Size=50" providerName="System.Data.SqlClient"/>
    <add name="email" connectionString="server=YOUR_SQL_SERVER;uid=YOUR_DB_USER;pwd=YOUR_DB_PASSWORD;database=scanner;Min Pool Size=3;Max Pool Size=50" providerName="System.Data.SqlClient"/>
    <add name="hcidb" connectionString="server=YOUR_SQL_SERVER;uid=YOUR_DB_USER;pwd=YOUR_DB_PASSWORD;Min Pool Size=3;Max Pool Size=50;Connect Timeout=10;database=" providerName="System.Data.SqlClient"/>
    <add name="hcidb_ro" connectionString="server=YOUR_SQL_SERVER;uid=YOUR_DB_USER;pwd=YOUR_DB_PASSWORD;ApplicationIntent=ReadOnly;Min Pool Size=3;Max Pool Size=50;Connect Timeout=10;database=" providerName="System.Data.SqlClient"/>
    <!-- Testing -->
    <!--<add name="reports" connectionString="server=YOUR_TEST_SQL_SERVER;uid=YOUR_TEST_USER;pwd=YOUR_TEST_PASSWORD;database=reports;Min Pool Size=3;Max Pool Size=50" providerName="System.Data.SqlClient"/>
    <add name="email" connectionString="server=YOUR_TEST_SQL_SERVER;uid=YOUR_TEST_USER;pwd=YOUR_TEST_PASSWORD;database=scanner;Min Pool Size=3;Max Pool Size=50" providerName="System.Data.SqlClient"/>
    <add name="hcidb" connectionString="server=YOUR_TEST_SQL_SERVER;uid=YOUR_TEST_USER;pwd=YOUR_TEST_PASSWORD;Min Pool Size=3;Max Pool Size=50;Connect Timeout=10;database=" providerName="System.Data.SqlClient"/>
    <add name="hcidb_ro" connectionString="server=YOUR_TEST_SQL_SERVER;uid=YOUR_TEST_USER;pwd=YOUR_TEST_PASSWORD;ApplicationIntent=ReadOnly;Min Pool Size=3;Max Pool Size=50;Connect Timeout=10;database=" providerName="System.Data.SqlClient"/>-->
  </connectionStrings>
  <log4net>
    <appender name="RemoteSyslogAppender" type="log4net.Appender.RemoteSyslogAppender">
      <identity value=""/>
      <layout type="log4net.Layout.PatternLayout" value="%message"/>
      <!-- Production -->
      <remoteAddress value="YOUR_SYSLOG_SERVER_IP"/>
      <!-- Testing -->
      <!--<remoteAddress value="YOUR_TEST_SYSLOG_SERVER_IP"/>-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG"/>
      </filter>
    </appender>
    <appender name="SALogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{SALogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="SCLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{SCLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="SOLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{SOLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="CALogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{CALogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="CCLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{CCLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="5"/>
      <maximumFileSize value="10000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="COLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{COLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="CRLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{CRLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="MRLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{MRLogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <appender name="GALogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString" value="%property{GALogFileName}"/>
      <lockingModel type="log4net.Appender.RollingFileAppender+MinimalLock"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="3"/>
      <maximumFileSize value="2000KB"/>
      <staticLogFileName value="true"/>
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message%newline"/>
      </layout>
    </appender>
    <logger name="EventLog">
      <level value="ALL"/>
      <appender-ref ref="RemoteSyslogAppender"/>
    </logger>
    <logger name="SADebugLog">
      <level value="ALL"/>
      <appender-ref ref="SALogFileAppender"/>
    </logger>
    <logger name="SCDebugLog">
      <level value="ALL"/>
      <appender-ref ref="SCLogFileAppender"/>
    </logger>
    <logger name="SODebugLog">
      <level value="ALL"/>
      <appender-ref ref="SOLogFileAppender"/>
    </logger>
    <logger name="CADebugLog">
      <level value="ALL"/>
      <appender-ref ref="CALogFileAppender"/>
    </logger>
    <logger name="CCDebugLog">
      <level value="ALL"/>
      <appender-ref ref="CCLogFileAppender"/>
    </logger>
    <logger name="CODebugLog">
      <level value="ALL"/>
      <appender-ref ref="COLogFileAppender"/>
    </logger>
    <logger name="CRDebugLog">
      <level value="ALL"/>
      <appender-ref ref="CRLogFileAppender"/>
    </logger>
    <logger name="MRDebugLog">
      <level value="ALL"/>
      <appender-ref ref="MRLogFileAppender"/>
    </logger>
    <logger name="GADebugLog">
      <level value="ALL"/>
      <appender-ref ref="GALogFileAppender"/>
    </logger>
  </log4net>
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.

            Visual Basic options:
            Set strict="true" to disallow all data type conversions 
            where data loss can occur. 
            Set explicit="true" to force declaration of all variables.
        -->
    <httpRuntime maxUrlLength="8192" maxQueryStringLength="8192" requestValidationMode="2.0"/>
    <compilation debug="true" strict="false" explicit="true" targetFramework="4.0">
      <assemblies>
        <!--<add assembly="dfcnet26, Version=2.6.0.0, Culture=neutral, PublicKeyToken=7DFA8BE5EB57AA56"/>-->
        <add assembly="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID" validateRequest="false">
      <namespaces>
        <clear/>
        <add namespace="System"/>
        <add namespace="System.Collections"/>
        <add namespace="System.Collections.Specialized"/>
        <add namespace="System.Configuration"/>
        <add namespace="System.Text"/>
        <add namespace="System.Text.RegularExpressions"/>
        <add namespace="System.Web"/>
        <add namespace="System.Web.Caching"/>
        <add namespace="System.Web.SessionState"/>
        <add namespace="System.Web.Security"/>
        <add namespace="System.Web.Profile"/>
        <add namespace="System.Web.UI"/>
        <add namespace="System.Web.UI.WebControls"/>
        <add namespace="System.Web.UI.WebControls.WebParts"/>
        <add namespace="System.Web.UI.HtmlControls"/>
        <!--<add namespace="DataFlux.dfClient"/>-->
      </namespaces>
    </pages>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <!--<authentication mode="Windows"/>-->
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <webServices>
      <protocols>
        <add name="HttpGet"/>
        <add name="HttpPost"/>
      </protocols>
    </webServices>
  </system.web>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IGeocodeService"/>
      </basicHttpBinding>
      <customBinding>
        <binding name="CustomBinding_IGeocodeService">
          <binaryMessageEncoding/>
          <httpTransport/>
        </binding>
      </customBinding>
    </bindings>
    <client>
      <endpoint address="http://dev.virtualearth.net/webservices/v1/geocodeservice/GeocodeService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IGeocodeService" contract="Geocode.IGeocodeService" name="BasicHttpBinding_IGeocodeService"/>
      <endpoint address="http://dev.virtualearth.net/webservices/v1/geocodeservice/GeocodeService.svc/binaryHttp" binding="customBinding" bindingConfiguration="CustomBinding_IGeocodeService" contract="Geocode.IGeocodeService" name="CustomBinding_IGeocodeService"/>
    </client>
  </system.serviceModel>
</configuration>